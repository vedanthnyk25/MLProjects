# -*- coding: utf-8 -*-
"""Big Mart Sales Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s6qR7CYYCcCeDJmc9IDorVdFC7J1J7LL
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import LabelEncoder

big_mart_data=pd.read_csv("/content/Train.csv")
big_mart_data.head()

big_mart_data.isnull().sum()

weight_mean=big_mart_data['Item_Weight'].mean()
big_mart_data['Item_Weight'].fillna(weight_mean,inplace=True)

big_mart_data.isnull().sum()

mode_outlet_size=big_mart_data.pivot_table(values="Outlet_Size",columns="Outlet_Type",aggfunc=(lambda x:x.mode()[0]) )

mode_outlet_size

missing_values=big_mart_data["Outlet_Size"].isnull()

big_mart_data.loc[missing_values,'Outlet_Size']=big_mart_data.loc[missing_values,'Outlet_Type'].apply(lambda x:mode_outlet_size)

big_mart_data.isnull().sum()

encoder=LabelEncoder()

plt.figure(figsize=(6,6))
sns.distplot(big_mart_data.Item_Weight)
plt.show



plt.figure(figsize=(6,6))
sns.distplot(big_mart_data.Item_Outlet_Sales)
plt.show

big_mart_data=big_mart_data.replace({"Item_Fat_Content":{"low fat":"Low Fat","lf":"Low Fat","reg":"Regular"}},inplace=True)

big_mart_data.head()

big_mart_data.Item_Identifier=encoder.fit_transform(big_mart_data.Item_Identifier)
big_mart_data.Item_Fat_Content=encoder.fit_transform(big_mart_data.Item_Fat_Content)
big_mart_data.Item_Type=encoder.fit_transform(big_mart_data.Item_Type)
big_mart_data.Outlet_Identifier=encoder.fit_transform(big_mart_data.Outlet_Identifier)
big_mart_data.Outlet_Size=encoder.fit_transform(big_mart_data.Outlet_Size)
big_mart_data.Outlet_Location_Type=encoder.fit_transform(big_mart_data.Outlet_Location_Type)
big_mart_data.Outlet_Type=encoder.fit_transform(big_mart_data.Outlet_Type)

x=big_mart_data.drop("Item_Outlet_Sales",axis=1)

y=big_mart_data.Item_Outlet_Sales

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=3)

regressor=XGBRegressor()

regressor.fit(x_train,y_train)

training_prediction=regressor.predict(x_train)
r2_training=metrics.r2_score(y_train,training_prediction)
print(r2_training)

testing_prediction=regressor.predict(x_test)
r2_testing=metrics.r2_score(y_test,testing_prediction)
print(r2_testing)

